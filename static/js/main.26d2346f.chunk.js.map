{"version":3,"sources":["components/country/country.js","components/wrapper.js","components/country/country-list.js","components/actions/input.js","components/actions/search.js","components/actions/Region.js","components/actions/action-list.js","wrapper.js","components/header.js","components/country/countrySelected.js","components/country/country-page.js","App.js","reducers/reducer.js","serviceWorker.js","index.js"],"names":["CountryStyled","styled","div","Country","flag","name","population","region","capital","alpha2Code","history","useHistory","onClick","push","slugify","loading","src","alt","className","WrapperStyled","Wrapper","children","CountryListStyled","CountryList","dispatch","useDispatch","countryListByName","useSelector","state","countryList","filterByRegion","length","coutryFilteredByRegion","console","log","useEffect","fetch","then","response","json","list","type","payload","catch","map","key","InputStyled","label","Input","props","SearchStyled","Search","useState","inputValue","setInputValue","placeholder","value","onChange","e","target","RegionFilterStyled","Region","dropdown","setdropdown","onRegionChange","selectEvent","regionSelected","id","ActionListStyled","ActionList","HeaderStyled","Header","setDarkMode","darkMode","to","CountrySelectedStyled","CountrySelected","nativeName","subregion","topLevelDomain","currencies","languages","borders","item","class","CountryPageStyed","Styled","CountryPage","match","DBcountry","find","params","country","setCountry","toLowerCase","data","goBack","store","createStore","action","filter","includes","App","setChecked","mainClass","changeMedia","mq","matches","window","matchMedia","addListener","removeListener","path","component","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.26d2346f.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport {\r\n    useHistory,\r\n} from 'react-router-dom'\r\n\r\nimport slugify from 'slugify'\r\n\r\nconst CountryStyled = styled.div`\r\n    /*width : 264px;*/\r\n    border-radius: 5px;\r\n    box-shadow: 0 0 7px 2px rgba(0,0,0,.03);\r\n    text-align: left;\r\n    background:var(--white);\r\n    cursor:pointer;\r\n    transition: 1s ease;\r\n    &:hover {\r\n        transform: scale(1.05)\r\n    }\r\n    img{\r\n        width:100%;\r\n        height:160px;\r\n        object-fit: cover;\r\n    }\r\n    .details {\r\n        padding: 1.5em;\r\n    }\r\n    h2{\r\n        margin : 0;\r\n        margin-bottom:1rem;\r\n        font-size:18px;\r\n        font-weight: 700;\r\n\r\n    }\r\n\r\n    p{\r\n        font-size: .9em;\r\n        margin-bottom: .5rem\r\n    }\r\n`\r\n\r\nfunction Country ({\r\n    flag,\r\n    name,\r\n    population,\r\n    region,\r\n    capital,\r\n    alpha2Code,\r\n}) {\r\n    const history = useHistory()\r\n    const handleClick = () => {\r\n        history.push(`/country/${slugify(alpha2Code)}`)\r\n    }\r\n    return (\r\n        <CountryStyled onClick={handleClick}>\r\n            <img loading='lazy' src={flag} alt=\"\"/>\r\n            <div className=\"details\">\r\n                <h2>{name}</h2>\r\n                <p><strong>Population:</strong>{population}</p>\r\n                <p><strong>Region:</strong>{region}</p>\r\n                <p><strong>Capital:</strong>{capital}</p>\r\n            </div>\r\n        \r\n        </CountryStyled>\r\n    )\r\n}\r\n\r\nexport default Country;","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst WrapperStyled = styled.div`\r\n  max-width: 1312px;\r\n  margin: auto;\r\n  padding: 0 1rem;\r\n`\r\n\r\nfunction Wrapper({ children }) {\r\n  return (\r\n    <WrapperStyled>\r\n      {children}\r\n    </WrapperStyled>\r\n  )\r\n}\r\n\r\nexport default Wrapper","import React, { useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport Country from './country'\r\nimport Wrapper from '../wrapper'\r\n\r\n\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\n\r\nconst CountryListStyled = styled.div`\r\n    display:grid;\r\n    grid-row-gap:2.3em;\r\n    grid-column-gap:65px;\r\n    grid-auto-flow: columns;\r\n    grid-template-columns: repeat(auto-fill,262px);\r\n    background: var(--gris);\r\n    padding: 4em 2em;\r\n    justify-content: center;\r\n`\r\n\r\nfunction CountryList () {\r\n    \r\n    const dispatch = useDispatch()\r\n    const countryListByName = useSelector( (state ) => state.countryListByName)\r\n    /*const [countryList, setCountryList] = useState([])*/\r\n\r\n    const countryList = useSelector( (state) => {\r\n        if ( state.filterByRegion !== '' && countryListByName.length === 0 ) {\r\n            return state.coutryFilteredByRegion\r\n        }\r\n        if ( countryListByName.length > 0 ) {\r\n            return countryListByName\r\n        }\r\n\r\n        return state.countryList\r\n    })\r\n\r\n    console.log('el estado total de mi app es', countryList)\r\n    useEffect(() => {\r\n        fetch('https://restcountries.eu/rest/v2/all')\r\n        .then(( response ) =>{\r\n            return response.json()\r\n        })\r\n        .then(( list ) => {\r\n\r\n            dispatch({\r\n                type: 'SET_COUNTRY_LIST',\r\n                payload: list\r\n            })\r\n            /*setCountryList(data)*/\r\n            console.log(list)\r\n        })\r\n        .catch( ()=> {\r\n            console.log('Hubo un error')\r\n        })\r\n\r\n    }, [dispatch])\r\n    return (\r\n        <Wrapper>\r\n            <CountryListStyled>\r\n                {\r\n                    countryList.map( ( {alpha2Code, flag, name, population, region, capital} )=> {\r\n                        return (\r\n                            <Country\r\n                                alpha2Code={alpha2Code}\r\n                                key={alpha2Code}\r\n                                flag = {flag}\r\n                                name = {name}\r\n                                population = {population}\r\n                                region = {region}\r\n                                capital= {capital}\r\n\r\n                            ></Country>\r\n                        )\r\n                    })\r\n                }\r\n            </CountryListStyled>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default CountryList;","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst InputStyled = styled.label`\r\n  display: inline-flex;\r\n  background: var(--white);\r\n  align-items: center;\r\n  box-shadow: 0 2px 9px 0 rgba(0,0,0,.05);\r\n  padding: 0 2rem;\r\n  border-radius: 5px;\r\n  flex: 1;\r\n  i {\r\n    margin-right: 1em;\r\n    color: #C4C4C4;\r\n  }\r\n  input {\r\n    /* width: 100%; */\r\n    flex: 1;\r\n    border: none;\r\n    height: 48px;\r\n    line-height: 48px;\r\n    font-size: .7em;\r\n    outline: 0;\r\n    color: var(--black);\r\n    background: var(--white);\r\n    &::-webkit-input-placeholder {\r\n      color: #C4C4C4;\r\n    }\r\n  }\r\n`\r\n\r\nfunction Input({ ...props }) {\r\n  return (\r\n    <InputStyled>\r\n      <i className=\"fas fa-search\"></i>\r\n      <input type=\"text\" {...props} />\r\n    </InputStyled>\r\n  )\r\n}\r\n\r\nexport default Input\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport Input from './input'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nconst SearchStyled = styled.div`\r\n  display: flex;\r\n  position: relative;\r\n  .close {\r\n    position: absolute;\r\n    right: 1em;\r\n    top: 1em;\r\n    border-radius: 50%;\r\n    border: none;\r\n    box-shadow: 0 2px 9px 0 rgba(0,0,0,.05);\r\n  }\r\n`\r\n\r\nfunction Search() {\r\n  const [inputValue, setInputValue] = useState('')\r\n  const dispatch = useDispatch()\r\n\r\n  const filterByName = (e) => {\r\n    setInputValue(e.target.value)\r\n    dispatch({\r\n      type: 'SET_COUNTRY_BY_NAME',\r\n      payload: e.target.value\r\n    })\r\n  }\r\n  const clearInput = () => {\r\n    dispatch({\r\n      type: 'SET_COUNTRY_BY_NAME',\r\n      payload: ''\r\n    })\r\n    setInputValue('')\r\n  }\r\n  return (\r\n    <SearchStyled>\r\n      {\r\n        inputValue &&\r\n        <i className=\"fas fa-times close\" onClick={clearInput}></i>\r\n      }\r\n      <Input placeholder=\"Search for a country...\" value={inputValue} onChange={filterByName} />\r\n    </SearchStyled>\r\n  )\r\n}\r\n\r\nexport default Search\r\n","import React, {useState} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styled from 'styled-components'\r\nconst RegionFilterStyled = styled.div`\r\n@import url('https://fonts.google.com/specimen/Nunito+Sans');\r\n* {\r\n    box-sizing: border-box;\r\n}\r\n.dropdown {\r\n  border-radius: 5px;\r\n  background-color: var(--white);\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.06), 0 1px 2px rgba(0, 0, 0, 0.12);\r\n  cursor: pointer;\r\n  text-align: center;\r\n  font-size: 12px;\r\n  padding: 20px;\r\n  position: relative;\r\n  background: var(--white);\r\n}\r\n.btn-toggle .fas {\r\n  display: none;\r\n}\r\n\r\nbody.dark .btn-toggle .fas {\r\n  display: inline-block;\r\n}\r\n\r\n\r\n.dropdown .fa-chevron-down {\r\n  margin-left: 10px;\r\n}\r\n\r\n.dropdown ul {\r\nborder-radius: 4px;\r\n  background-color: var(--background-el);\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.06), 0 1px 2px rgba(0, 0, 0, 0.12);\r\n  display: none;\r\n  padding: 10px;\r\n  text-align: center;\r\n  position: absolute;\r\n  top: 100%;\r\n  left: 0;\r\n  list-style-type: none;\r\n  background: var(--white);\r\n  width: 100%;\r\n  z-index: 99;\r\n}\r\n\r\n.dropdown.open ul {\r\n  display: block;\r\n}\r\n\r\n.dropdown ul li {\r\n  margin: 10px 0;\r\n}\r\n\r\n`\r\n\r\nconst filterByRegionAction = (regionSelected) => {\r\n  return {\r\n    type: 'FILTER_BY_REGION',\r\n    payload: { regionSelected },\r\n  };\r\n}\r\n\r\nexport const Region = () => {\r\n  const dispatch = useDispatch();\r\n  const [dropdown, setdropdown] = useState(false)\r\n  const filterByRegion = useSelector((state) => state.filterByRegion);\r\n\r\n  const onRegionChange = (selectEvent) => {\r\n\r\n    dispatch(filterByRegionAction(selectEvent));\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <RegionFilterStyled>\r\n\r\n    <div className={`${dropdown?'dropdown open':'dropdown'}`} onClick={()=> setdropdown(!dropdown)} id=\"filter\">\r\n          Filter by Region\r\n          <i className=\"fas fa-chevron-down\"></i>\r\n          <ul>\r\n            <li onClick={()=>onRegionChange('Africa')}>Africa</li>\r\n            <li onClick={()=>onRegionChange('Americas')}>Americas</li>\r\n            <li onClick={()=>onRegionChange('Asia')}>Asia</li>\r\n            <li onClick={()=>onRegionChange('Europe')}>Europe</li>\r\n            <li onClick={()=>onRegionChange('Oceania')}>Oceania</li>\r\n          </ul>\r\n        </div>\r\n    </RegionFilterStyled>\r\n    </>\r\n  )\r\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Search from './search'\r\nimport { Region as FilterByRegion } from './Region'\r\nimport Wrapper from '../wrapper'\r\n\r\nconst ActionListStyled = styled.div`\r\n  .grid {\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    grid-row-gap: 20px;\r\n  }\r\n  @media screen and (min-width: 768px) {\r\n    .grid {\r\n      grid-template-columns: 480px 1fr 164px;\r\n    }\r\n  }\r\n`\r\n\r\nfunction ActionList() {\r\n  return (\r\n    <ActionListStyled>\r\n      <Wrapper>\r\n        <div className=\"grid\">\r\n          <Search />\r\n          <span></span>\r\n          <FilterByRegion />\r\n        </div>\r\n      </Wrapper>\r\n    </ActionListStyled>\r\n  )\r\n}\r\n\r\nexport default ActionList\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst WrapperStyled = styled.div`\r\n  max-width: 1312px;\r\n  margin: auto;\r\n  padding: 0 1rem;\r\n`\r\n\r\nfunction Wrapper({ children }) {\r\n  return (\r\n    <WrapperStyled>\r\n      {children}\r\n    </WrapperStyled>\r\n  )\r\n}\r\n\r\nexport default Wrapper","import React from 'react';\r\nimport styled from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nimport Wrapper from '../wrapper'\r\n\r\nconst HeaderStyled = styled.div`\r\n\r\n    background: var(--white);\r\n    margin-bottom:1em;\r\n    box-shadow: 0 2px 4px 0 rgba(0,0,0, .06);\r\n    .content{\r\n        height: 80px;\r\n        display: flex;\r\n        align-items:center;\r\n        justify-content: space-between;\r\n    }\r\n    h1 {\r\n        font-size: 14px;\r\n        font-weight:bold;\r\n    }\r\n    a{\r\n        text-decoration:none;\r\n        color:var(--dark);\r\n    }\r\n    .dark-mode{\r\n        cursor:pointer;\r\n        .moon{\r\n            transform: rotate(-25deg);\r\n            margin-right:15px;\r\n            display:inline-flex\r\n\r\n        }\r\n\r\n        p{\r\n            font-size:12px;\r\n            font-weight:600;\r\n\r\n        }\r\n    }\r\n`\r\n\r\nfunction Header( {setDarkMode , darkMode} ) {\r\n\r\n    const handleClick = () => {\r\n        setDarkMode(!darkMode)\r\n    }\r\n    return(\r\n        <HeaderStyled>\r\n            <Wrapper>\r\n                <div className=\"content\">\r\n                    <Link to=\"/\">\r\n                        <h1>Where in the world?</h1>\r\n                    </Link>\r\n                    <div className=\"dark-mode\">\r\n                        <p onClick={handleClick}>\r\n                            <span className=\"moon\">\r\n                                {\r\n                                    darkMode ?\r\n                                    <i className=\"fas fa-moon\"></i> : \r\n                                    <i className=\"far fa-moon\"></i> \r\n                                }\r\n                            </span>\r\n                            Dark Mode\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </Wrapper>\r\n        </HeaderStyled>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport styled from 'styled-components'\r\n\r\nconst CountrySelectedStyled = styled.div`\r\n    \r\n    margin-top:3em;\r\n    padding-bottom:3em;\r\n    \r\n    img{\r\n        width:100%;\r\n        margin-bottom:2em\r\n\r\n    }\r\n    .grid{\r\n        display:grid;\r\n        grid-row-gap:1em\r\n    }\r\n    .border-item{\r\n        padding:.5em 2em;\r\n        box-shadow: 0 0 5px rgba(0,0,0,.3);\r\n        border-radius:5px;\r\n        display:inline-flex;\r\n        margin-bottom:5px;\r\n        margin-right:15px;\r\n        background:var(--white);\r\n    }\r\n    .languages {\r\n    span {\r\n      margin-right: 5px;\r\n      &:after {\r\n        content: ',';\r\n      }\r\n      &:last-child {\r\n        &:after {\r\n          display: none;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  @media screen and (min-width: 1024px){\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-column-gap: 120px;\r\n    margin-top: 5em;\r\n    .grid{\r\n        grid-template-columns: 1fr 1fr;\r\n        \r\n    }\r\n    .borders {\r\n      display: inline-flex;\r\n      margin-right: 1em;\r\n      margin-top: 3.5em;\r\n    }\r\n  }\r\n\r\n`\r\n\r\nfunction CountrySelected ({ \r\n    flag,\r\n    name, \r\n    nativeName,\r\n    region, \r\n    subregion,\r\n    capital, \r\n    topLevelDomain,\r\n    currencies = [],\r\n    languages = [],\r\n    borders = [],\r\n    alpha2Code\r\n    }) {\r\n    return(\r\n        <CountrySelectedStyled>\r\n            <img src={flag}></img>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <div className=\"grid\">\r\n                    <div>\r\n                        <p><strong>Native Name :</strong> {nativeName} </p>\r\n                        <p><strong>Region :</strong> {region} </p>\r\n                        <p><strong>Sub Region :</strong> {subregion} </p>\r\n                        <p><strong>Capital :</strong> {capital} </p>\r\n                    </div>\r\n                    <div>\r\n                        <p><strong>Top Level Domain :</strong> {topLevelDomain} </p>\r\n                        <p><strong>Currencies:</strong> {currencies.map((item) => <span>{item.name}</span>)}</p>\r\n                        <p className=\"languages\"><strong>Languages:</strong> {languages.map((item) => <span>{item.name}</span>)}</p>\r\n                    </div>\r\n                </div>\r\n                    <p className=\"borders\"><strong>Border Countries:</strong></p>\r\n                    {borders.map((item) => <span class=\"border-item\">{item}</span>)}\r\n            </div>\r\n        </CountrySelectedStyled>\r\n    )\r\n}\r\n\r\nexport default CountrySelected","import React, { useState,useEffect } from 'react'\r\nimport Styled from 'styled-components'\r\n\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport CountrySelected from './countrySelected'\r\n\r\nimport Wrapper from '../wrapper'\r\n\r\nconst CountryPageStyed = Styled.div`\r\n.back{\r\n    background: var(--white);\r\n    box-shadow: 0 0 10px rgba(0,0,0,.3);\r\n    padding: .7em 2.2em;\r\n    border-radius: 5px;\r\n    border:none;\r\n    cursor:pointer;\r\n    margin-top:1em;\r\n    color:var(--black);\r\n    i{\r\n        margin-right:5px;\r\n    }\r\n    @media screen and (min-width: 1024px) {\r\n    .back {\r\n      margin-top: 3em;\r\n    }\r\n  }\r\n\r\n}\r\n`\r\n\r\nfunction CountryPage ({ match, history }) {\r\n    let DBcountry = useSelector(state => state.countryList.find( item => item.alpha2Code === match.params.id))\r\n    const [country, setCountry] = useState(DBcountry)\r\n    \r\n    console.log(country)\r\n    useEffect( ()=> {\r\n    \r\n        if ( !country ) {\r\n            fetch(`https://restcountries.eu/rest/v2/alpha/${match.params.id.toLowerCase()}`)\r\n                .then((response) => response.json())\r\n                .then((data)=> {\r\n                   setCountry(data)\r\n                })\r\n        }\r\n    }, [country, match.params.id])\r\n\r\n    function handleClick() {\r\n        history.goBack()\r\n      }\r\n    return (\r\n        <CountryPageStyed>\r\n            <Wrapper>\r\n                <button className=\"back\" onClick={handleClick}><i className=\"fas fa-long-arrow-alt-left\"></i>Back</button>\r\n                <CountrySelected {...country}/>\r\n            </Wrapper>\r\n        </CountryPageStyed>\r\n    )\r\n}\r\n\r\nexport default CountryPage","import React, { useState, useEffect } from 'react';\r\nimport { Provider } from 'react-redux'\r\nimport { createStore } from 'redux'\r\n\r\nimport './App.css';\r\nimport CountryList from './components/country/country-list'\r\nimport ActionList from './components/actions/action-list'\r\nimport reducer from './reducers/reducer'\r\nimport Header from './components/header'\r\nimport CountryPage from './components/country/country-page'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch\r\n} from 'react-router-dom'\r\n\r\n\r\n\r\n//const store = createStore( initalState, reducer, enhancer)\r\n\r\nconst initalState = {\r\n  countryList : [],\r\n  countryListByName:[],\r\n  coutryFilteredByRegion:[],\r\n  filterByRegion:'',\r\n\r\n}\r\n\r\n\r\nconst store = createStore(  reducer, initalState)\r\n\r\nfunction App() {\r\n  const [darkMode, setDarkMode] = useState(false)\r\n  const [checked, setChecked] = useState(false)\r\n  const mainClass = darkMode ? 'is-dark-mode' : 'is-light-mode'\r\n\r\n  function changeMedia(mq) {\r\n    setDarkMode(mq.matches)\r\n    setChecked(mq.matches)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const mq = window.matchMedia('(prefers-color-scheme: dark)')\r\n    mq.addListener(changeMedia)\r\n    setDarkMode(mq.matches)\r\n    setChecked(mq.matches)\r\n    return () => {\r\n      mq.removeListener(changeMedia)\r\n    }\r\n  }, [])\r\n  return (\r\n      <main className={mainClass}>\r\n        <Provider store = { store } >\r\n          <Router>\r\n            <Header setDarkMode = {setDarkMode} darkMode={darkMode}/>\r\n            <Switch>\r\n              <Route path='/country/:id' component={CountryPage}/>\r\n              <Route path=\"/\">\r\n                <ActionList/>\r\n                <CountryList/>\r\n              </Route>\r\n            </Switch>\r\n          </Router>\r\n      </Provider>\r\n\r\n      </main>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","export default function reducer(state, action) {\r\n  console.log(action)\r\n  switch (action.type) {\r\n    case 'SET_COUNTRY_LIST': {\r\n      console.log('voy a actualizar la lista de paises')\r\n      return { ...state, countryList: action.payload }\r\n    }\r\n\r\n    case 'SET_COUNTRY_BY_NAME': {\r\n      let list\r\n      if (state.filterByRegion !== '') {\r\n        list = state.coutryFilteredByRegion\r\n      } else {\r\n        list = state.countryList\r\n      }\r\n      const countryListByName = list.filter(country => country.name.toLowerCase().includes(action.payload.toLowerCase()))\r\n      return { ...state, countryListByName }\r\n    }\r\n\r\n\r\n    case 'FILTER_BY_REGION': {\r\n      const { regionSelected } = action.payload;\r\n\r\n      if ('' === regionSelected) {\r\n        return { ...state, coutryFilteredByRegion: [], filterByRegion: '', };\r\n      }\r\n\r\n      const coutryFilteredByRegion = state.countryList.filter((country) => country.region === regionSelected);\r\n\r\n      return { ...state, coutryFilteredByRegion, filterByRegion: regionSelected }\r\n    }\r\n\r\n    default: {\r\n      return state\r\n    }\r\n  }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}